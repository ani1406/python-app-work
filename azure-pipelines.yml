trigger:
  branches:
    include:
      - main  # Trigger pipeline on changes to the main branch

pool:
  vmImage: 'ubuntu-latest'  # Use an Ubuntu VM for the build agent

variables:
  imageName: 'python-app'  # Name of your Docker image
  acrName: 'workacr1'      # Your ACR name
  registry: '$(acrName).azurecr.io'  # Correct reference to registry
  tag: '$(Build.BuildId)'  # Tag the image with the build ID

steps:
# Step 1: Log in to Azure using the ARM service connection
- task: AzureCLI@2
  inputs:
    azureSubscription: 'work1-arm'  # Use the ARM service connection name
    scriptType: bash
    scriptLocation: inlineScript
    inlineScript: |
      echo "Logging into Azure..."
      az login --identity

# Step 2: Log in to ACR using the Docker service connection
- task: Docker@2
  inputs:
    command: 'login'
    containerRegistry: 'work1'  # Use the Docker service connection name

# Step 3: Build and Push Docker Image to ACR
- task: Docker@2
  inputs:
    command: 'buildAndPush'
    containerRegistry: 'work1'  # Use the Docker service connection name
    repository: '$(imageName)'  # Correct reference to image name (python-app)
    tags: '$(tag)'  # Tag the image with the build ID
    dockerfile: '**/Dockerfile'
    buildContext: '$(Build.SourcesDirectory)'

# Step 4: Deploy to AKS using the ARM service connection
- task: AzureCLI@2
  inputs:
    azureSubscription: 'work1-arm'  # Use the ARM service connection name
    scriptType: bash
    scriptLocation: inlineScript
    inlineScript: |
      echo "Deploying to AKS..."
      kubectl apply -f deployment.yaml
